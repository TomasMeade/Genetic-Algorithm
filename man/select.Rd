% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select.R
\name{select}
\alias{select}
\title{Use a basic genetic algorithm to select GLM variables.}
\usage{
select(
  data,
  y_ind,
  glm_family = "gaussian",
  objective_fun = NULL,
  gen_op = NULL,
  mut_prob = 0.05,
  n_ind = 2 * (ncol(data) - 1),
  max_n_iter = 1000,
  abs_conv_thresh = 0.01,
  abs_conv_n_iter = 10
)
}
\arguments{
\item{data}{Data frame on which GLMs are fitted. One variable should be the response variable.
All other variables are considered potential predictor variables.}

\item{y_ind}{Column index of response variable in \code{data}.}

\item{glm_family}{Type of GLM regression (see documentation for \code{family} argument of \code{glm}).}

\item{objective_fun}{(optional) An optional objective function that should take in a binary string of
length \code{ncol(data)-1} and return a numeric value. Smaller values are considered better
(individuals with smaller objective function values are considered "more fit"). Each digit of the binary string of
length \code{ncol(data)-1} should be thought of as corresponding to the \code{ncol(data)-1} possible predictor
variables in \code{data}, e.g. a \code{'1'} as the first digit corresponds to selecting the first non-reponse
variable in \code{data} to be included in a GLM model, while a \code{'0'} in the same place is interpreted as not
selecting the corresponding variable. The default objective function returns the AIC of the GLM model that
corresponds to the binary string.}

\item{gen_op}{(optional) An optional genetic operator function that should take in a vector of two binary strings
of length \code{ncol(data)-1} and return a vector of two binary strings of the same length.}

\item{mut_prob}{Probability for each potential child chromosome to be mutated. If a child chromosome is
randomly selected to be mutated, a gene at random within the chromosome is selected to switch (if it is 0, it becomes 1, and vice versa).}

\item{n_ind}{Number of individuals in each generation (must be a positive, even integer).}

\item{max_n_iter}{Maximum number of generations. The function returns if
\code{n_ind} generations of individuals have been generated.}

\item{abs_conv_thresh}{Threshold determining when the function returns. If among the last
\code{abs_conv_n_iter} generations, the standard deviation of the objective function value of the
fittest individual of each generation is less than \code{abs_conv_thresh}, the function returns.}

\item{abs_conv_n_iter}{See definition of \code{abs_conv_thresh}.}
}
\value{
A list of the fittest individual in the final generation, the objective function value of
the fittest individual, the regression formula corresponding to the fittest individual,
the final generation and corresponding objective function values, the number of iterations of the algorithm
(number of generations), and whether the algorithm converged.
}
\description{
Use a basic genetic algorithm to select GLM variables.
}
\examples{
# large_testing_data contains 13 potential predictor variables,
# where the response variable is generated using x5, x8, and x13
# the response variable is the 14th column of the data frame
data(large_testing_data)
select(large_testing_data, 14, n_ind = 4*13)

# huge_testing_data$df contains 50 potential predictor variables,
# where the response variable is generated using x15, x26, x45
# (as indicated by huge_testing_data$true_idx)
# the response variable is the 51st column of the data frame
data(huge_testing_data)
select(huge_testing_data$df, 51, abs_conv_thresh = 0.1)
}
